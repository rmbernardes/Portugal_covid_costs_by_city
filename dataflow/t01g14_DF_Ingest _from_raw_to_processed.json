{
	"name": "t01g14_DF_Ingest _from_raw_to_processed",
	"properties": {
		"description": "Dataflow process to prepare the Sales Data for Exploration",
		"folder": {
			"name": "t01g14"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_Employee",
						"type": "DatasetReference"
					},
					"name": "RawEmployee",
					"description": "Import data from t01g14_DS_RAW_ADLS_Employee\n\nDefinind activity's friendly name as RawProduct"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_Product",
						"type": "DatasetReference"
					},
					"name": "RawProduct"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_ProductCategory",
						"type": "DatasetReference"
					},
					"name": "RawProductCategory"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_ProductSubcategory",
						"type": "DatasetReference"
					},
					"name": "RawProductSubcategory"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_SalesTerritory",
						"type": "DatasetReference"
					},
					"name": "RawSalesTerritory"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_Reseller",
						"type": "DatasetReference"
					},
					"name": "RawReseller"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_Geography",
						"type": "DatasetReference"
					},
					"name": "RawGeography"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_Date",
						"type": "DatasetReference"
					},
					"name": "RawDate"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_FactResellerSales",
						"type": "DatasetReference"
					},
					"name": "RawFactResellerSales"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_RAW_ADLS_FactSalesQuota",
						"type": "DatasetReference"
					},
					"name": "RawFactSalesQuota"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_Employee",
						"type": "DatasetReference"
					},
					"name": "RawEmployeeSink"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_Product",
						"type": "DatasetReference"
					},
					"name": "RawProductSink"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_ProductCategorySubCat",
						"type": "DatasetReference"
					},
					"name": "RawProductCategorySubCatSink"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_SalesTerritory",
						"type": "DatasetReference"
					},
					"name": "RawSalesTerritorySink"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_Reseller",
						"type": "DatasetReference"
					},
					"name": "RawResellerSink"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_Geography",
						"type": "DatasetReference"
					},
					"name": "RawGeographySink"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_Date",
						"type": "DatasetReference"
					},
					"name": "RawDateSink"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_FactResellerSales",
						"type": "DatasetReference"
					},
					"name": "RawFactResellerSalesSink"
				},
				{
					"dataset": {
						"referenceName": "t01g14_DS_PROC_ADLS_FactSalesQuota",
						"type": "DatasetReference"
					},
					"name": "RawFactSalesQuotaSink"
				}
			],
			"transformations": [
				{
					"name": "RawEmployeeSelected",
					"description": "Defining activity's friendly name as RawEmployeeSelected.\n\n\nSelecting the relevant columns for the analysis:  'EmployeeKey, SalesTerritoryKey, FirstName, LastName, LoginID'"
				},
				{
					"name": "RawEmployeeFilteredSalesPersonFlagTRUE",
					"description": "Filtering rows using expressions on columns 'SalesPersonFlag'. The goal is to get data on sales people only."
				},
				{
					"name": "RawEmployeeDerivedColumnFullName",
					"description": "Creating a new column \"FullName\" by concatenating \"FirstName\" with \"LastName\"."
				},
				{
					"name": "RawProductFilteredFinishedGoodsFlagTrue",
					"description": "Filtering rows using expressions on columns 'FinishedGoodsFlag'. The goal is to get data on finished products only."
				},
				{
					"name": "RawProductSelected",
					"description": "Defining activity's friendly name as RawProductSelected.\n\nSelecting the relevant columns for the analysis: 'ProductKey, ProductSubcategoryKey, EnglishProductName, Color'\n\n"
				},
				{
					"name": "RawProductCategorySelected",
					"description": "Selecting the relevant columns for the analysis: 'ProductCategoryKey, EnglishProductCategoryName'"
				},
				{
					"name": "RawProductSubcategorySelect",
					"description": "Selecting the relevant columns for the analysis:\n'ProductSubcategoryKey, EnglishProductSubcategoryName, ProductCategoryKey'\n\nThe resulting table will be used in a JOIN with ProductCategory table."
				},
				{
					"name": "RawSalesTerritorySelect",
					"description": "Selecting the relevant columns for the analysis:\n'SalesTerritoryKey, SalesTerritoryRegion, SalesTerritoryCountry, SalesTerritoryGroup'"
				},
				{
					"name": "RawResellerSelect",
					"description": "Selecting the relevant columns for the analysis:\n'ResellerKey, GeographyKey, BusinessType, ResellerName'"
				},
				{
					"name": "RawGeographySelect",
					"description": "Selecting the relevant columns for the analysis:\n'GeographyKey, City, StateProvinceName, EnglishCountryRegionName'"
				},
				{
					"name": "RawDateSelect",
					"description": "Selecting the relevant columns for the analysis:\n'DateKey, FullDateAlternateKey, MonthNumberOfYear, CalendarQuarter, CalendarYear'"
				},
				{
					"name": "RawProductSubcategoryJoinProductCategory",
					"description": "Left outer join on RawProductCategorySelected and RawProductSubcategorySelect to combine the information of both tables."
				},
				{
					"name": "RawProductCategorySubCat",
					"description": "Selecting the relevant columns for the analysis from the table created with the JOIN:\n 'ProductCategoryKey, EnglishProductCategoryName, ProductSubcategoryKey, EnglishProductSubcategoryName'"
				},
				{
					"name": "RawFactResellerSalesSelect",
					"description": "Selecting the relevant columns for the analysis: 'ProductKey, OrderDateKey, ShipDateKey, ResellerKey, EmployeeKey, SalesTerritoryKey, OrderQuantity, TotalProductCost, SalesAmount, ProductName'"
				},
				{
					"name": "RawFactSalesQuotaSelect",
					"description": "Selecting the relevant columns for the analysis: 'EmployeeKey, DateKey, SalesAmountQuota'"
				},
				{
					"name": "RawFactResellerSalesDerivedColumns",
					"description": "Enriching the table by creating 2 new columns:\n'Country' = \"USA\"\n'UnitCostAmount' = TotalProductCost / OrderQuantity"
				},
				{
					"name": "RawFactResellerSalesJoinProduct",
					"description": "Left outer join on RawFactResellerSales and RawProductSelected to combine the information of both tables (adding the ProductName to the ResellerSales Table).\n"
				},
				{
					"name": "RawDistinctFactResellerSales",
					"description": "Aggregating data by all columns of the table, in order to remove duplicate rows from the ResellerSales table."
				}
			],
			"script": "source(output(\n\t\tEmployeeKey as integer,\n\t\tParentEmployeeKey as string,\n\t\tEmployeeNationalIDAlternateKey as string,\n\t\tParentEmployeeNationalIDAlternateKey as string,\n\t\tSalesTerritoryKey as integer,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tMiddleName as string,\n\t\tNameStyle as string,\n\t\tTitle as string,\n\t\tHireDate as string,\n\t\tBirthDate as string,\n\t\tLoginID as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tMaritalStatus as string,\n\t\tEmergencyContactName as string,\n\t\tEmergencyContactPhone as string,\n\t\tSalariedFlag as string,\n\t\tGender as string,\n\t\tPayFrequency as string,\n\t\tBaseRate as string,\n\t\tVacationHours as string,\n\t\tSickLeaveHours as string,\n\t\tCurrentFlag as string,\n\t\tSalesPersonFlag as string,\n\t\tDepartmentName as string,\n\t\tStartDate as string,\n\t\tEndDate as string,\n\t\tStatus as string,\n\t\tEmployeePhoto as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> RawEmployee\nsource(output(\n\t\tProductKey as integer,\n\t\tProductAlternateKey as string,\n\t\tProductSubcategoryKey as integer,\n\t\tWeightUnitMeasureCode as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tEnglishProductName as string,\n\t\tSpanishProductName as string,\n\t\tFrenchProductName as string,\n\t\tStandardCost as string,\n\t\tFinishedGoodsFlag as string,\n\t\tColor as string,\n\t\tSafetyStockLevel as string,\n\t\tReorderPoint as string,\n\t\tListPrice as string,\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tWeight as string,\n\t\tDaysToManufacture as string,\n\t\tProductLine as string,\n\t\tDealerPrice as string,\n\t\tClass as string,\n\t\tStyle as string,\n\t\tModelName as string,\n\t\tLargePhoto as string,\n\t\tEnglishDescription as string,\n\t\tFrenchDescription as string,\n\t\tChineseDescription as string,\n\t\tArabicDescription as string,\n\t\tHebrewDescription as string,\n\t\tThaiDescription as string,\n\t\tGermanDescription as string,\n\t\tJapaneseDescription as string,\n\t\tTurkishDescription as string,\n\t\tStartDate as string,\n\t\tEndDate as string,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> RawProduct\nsource(output(\n\t\tProductCategoryKey as integer,\n\t\tProductCategoryAlternateKey as string,\n\t\tEnglishProductCategoryName as string,\n\t\tSpanishProductCategoryName as string,\n\t\tFrenchProductCategoryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> RawProductCategory\nsource(output(\n\t\tProductSubcategoryKey as integer,\n\t\tProductSubcategoryAlternateKey as string,\n\t\tEnglishProductSubcategoryName as string,\n\t\tSpanishProductSubcategoryName as string,\n\t\tFrenchProductSubcategoryName as string,\n\t\tProductCategoryKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> RawProductSubcategory\nsource(output(\n\t\tSalesTerritoryKey as string,\n\t\tSalesTerritoryAlternateKey as string,\n\t\tSalesTerritoryRegion as string,\n\t\tSalesTerritoryCountry as string,\n\t\tSalesTerritoryGroup as string,\n\t\tSalesTerritoryImage as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> RawSalesTerritory\nsource(output(\n\t\tResellerKey as integer,\n\t\tGeographyKey as integer,\n\t\tResellerAlternateKey as string,\n\t\tPhone as string,\n\t\tBusinessType as string,\n\t\tResellerName as string,\n\t\tNumberEmployees as string,\n\t\tOrderFrequency as string,\n\t\tOrderMonth as string,\n\t\tFirstOrderYear as string,\n\t\tLastOrderYear as string,\n\t\tProductLine as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tAnnualSales as string,\n\t\tBankName as string,\n\t\tMinPaymentType as string,\n\t\tMinPaymentAmount as string,\n\t\tAnnualRevenue as string,\n\t\tYearOpened as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RawReseller\nsource(output(\n\t\tGeographyKey as integer,\n\t\tCity as string,\n\t\tStateProvinceCode as string,\n\t\tStateProvinceName as string,\n\t\tCountryRegionCode as string,\n\t\tEnglishCountryRegionName as string,\n\t\tSpanishCountryRegionName as string,\n\t\tFrenchCountryRegionName as string,\n\t\tPostalCode as string,\n\t\tSalesTerritoryKey as string,\n\t\tIpAddressLocator as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RawGeography\nsource(output(\n\t\tDateKey as string,\n\t\tFullDateAlternateKey as string,\n\t\tDayNumberOfWeek as string,\n\t\tEnglishDayNameOfWeek as string,\n\t\tSpanishDayNameOfWeek as string,\n\t\tFrenchDayNameOfWeek as string,\n\t\tDayNumberOfMonth as string,\n\t\tDayNumberOfYear as string,\n\t\tWeekNumberOfYear as string,\n\t\tEnglishMonthName as string,\n\t\tSpanishMonthName as string,\n\t\tFrenchMonthName as string,\n\t\tMonthNumberOfYear as string,\n\t\tCalendarQuarter as string,\n\t\tCalendarYear as string,\n\t\tCalendarSemester as string,\n\t\tFiscalQuarter as string,\n\t\tFiscalYear as string,\n\t\tFiscalSemester as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> RawDate\nsource(output(\n\t\tProductKey as integer,\n\t\tOrderDateKey as integer,\n\t\tDueDateKey as integer,\n\t\tShipDateKey as integer,\n\t\tResellerKey as integer,\n\t\tEmployeeKey as integer,\n\t\tPromotionKey as integer,\n\t\tCurrencyKey as integer,\n\t\tSalesTerritoryKey as integer,\n\t\tSalesOrderNumber as integer,\n\t\tSalesOrderLineNumber as integer,\n\t\tRevisionNumber as integer,\n\t\tOrderQuantity as integer,\n\t\tUnitPrice as double,\n\t\tExtendedAmount as double,\n\t\tUnitPriceDiscountPct as string,\n\t\tDiscountAmount as double,\n\t\tProductStandardCost as double,\n\t\tTotalProductCost as double,\n\t\tSalesAmount as double,\n\t\tTaxAmt as double,\n\t\tFreight as string,\n\t\tCarrierTrackingNumber as string,\n\t\tCustomerPONumber as string,\n\t\tOrderDate as string,\n\t\tDueDate as string,\n\t\tShipDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> RawFactResellerSales\nsource(output(\n\t\tSalesQuotaKey as string,\n\t\tEmployeeKey as string,\n\t\tDateKey as string,\n\t\tCalendarYear as string,\n\t\tCalendarQuarter as string,\n\t\tSalesAmountQuota as string,\n\t\tDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RawFactSalesQuota\nRawEmployeeFilteredSalesPersonFlagTRUE select(mapColumn(\n\t\tEmployeeKey,\n\t\tSalesTerritoryKey,\n\t\tFirstName,\n\t\tLastName,\n\t\tLoginID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawEmployeeSelected\nRawEmployee filter(SalesPersonFlag==\"True\") ~> RawEmployeeFilteredSalesPersonFlagTRUE\nRawEmployeeSelected derive(FullName = FirstName+\" \"+LastName) ~> RawEmployeeDerivedColumnFullName\nRawProduct filter(FinishedGoodsFlag==\"True\") ~> RawProductFilteredFinishedGoodsFlagTrue\nRawProductFilteredFinishedGoodsFlagTrue select(mapColumn(\n\t\tProductKey,\n\t\tProductSubcategoryKey,\n\t\tEnglishProductName,\n\t\tColor\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawProductSelected\nRawProductCategory select(mapColumn(\n\t\tProductCategoryKey,\n\t\tEnglishProductCategoryName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawProductCategorySelected\nRawProductSubcategory select(mapColumn(\n\t\tProductSubcategoryKey,\n\t\tEnglishProductSubcategoryName,\n\t\tProductCategoryKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawProductSubcategorySelect\nRawSalesTerritory select(mapColumn(\n\t\tSalesTerritoryKey,\n\t\tSalesTerritoryRegion,\n\t\tSalesTerritoryCountry,\n\t\tSalesTerritoryGroup\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawSalesTerritorySelect\nRawReseller select(mapColumn(\n\t\tResellerKey,\n\t\tGeographyKey,\n\t\tBusinessType,\n\t\tResellerName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawResellerSelect\nRawGeography select(mapColumn(\n\t\tGeographyKey,\n\t\tCity,\n\t\tStateProvinceName,\n\t\tEnglishCountryRegionName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawGeographySelect\nRawDate select(mapColumn(\n\t\tDateKey,\n\t\tFullDateAlternateKey,\n\t\tMonthNumberOfYear,\n\t\tCalendarQuarter,\n\t\tCalendarYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawDateSelect\nRawProductCategorySelected, RawProductSubcategorySelect join(RawProductCategorySelected@ProductCategoryKey == RawProductSubcategorySelect@ProductCategoryKey,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> RawProductSubcategoryJoinProductCategory\nRawProductSubcategoryJoinProductCategory select(mapColumn(\n\t\tProductCategoryKey = RawProductCategorySelected@ProductCategoryKey,\n\t\tEnglishProductCategoryName,\n\t\tProductSubcategoryKey,\n\t\tEnglishProductSubcategoryName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawProductCategorySubCat\nRawFactResellerSalesJoinProduct select(mapColumn(\n\t\tProductKey = RawFactResellerSales@ProductKey,\n\t\tOrderDateKey,\n\t\tShipDateKey,\n\t\tResellerKey,\n\t\tEmployeeKey,\n\t\tSalesTerritoryKey,\n\t\tOrderQuantity,\n\t\tTotalProductCost,\n\t\tSalesAmount,\n\t\tProductName = EnglishProductName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawFactResellerSalesSelect\nRawFactSalesQuota select(mapColumn(\n\t\tEmployeeKey,\n\t\tDateKey,\n\t\tSalesAmountQuota\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawFactSalesQuotaSelect\nRawFactResellerSalesSelect derive(Country = \"USA\",\n\t\tUnitCostAmount = TotalProductCost / OrderQuantity) ~> RawFactResellerSalesDerivedColumns\nRawFactResellerSales, RawProductSelected join(RawFactResellerSales@ProductKey == RawProductSelected@ProductKey,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> RawFactResellerSalesJoinProduct\nRawFactResellerSalesDerivedColumns aggregate(groupBy(ProductKey,\n\t\tOrderDateKey,\n\t\tShipDateKey,\n\t\tResellerKey,\n\t\tEmployeeKey,\n\t\tSalesTerritoryKey,\n\t\tOrderQuantity,\n\t\tTotalProductCost,\n\t\tSalesAmount,\n\t\tProductName,\n\t\tCountry,\n\t\tUnitCostAmount),\n\teach(match(!in(['ProductKey','OrderDateKey','ProductName','ResellerKey','ShipDateKey','EmployeeKey','SalesTerritoryKey','OrderQuantity','UnitCostAmount','TotalProductCost','SalesAmount','Country'],name)), $$ = first($$))) ~> RawDistinctFactResellerSales\nRawEmployeeDerivedColumnFullName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimEmployee.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawEmployeeSink\nRawProductSelected sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimProduct.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawProductSink\nRawProductCategorySubCat sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimProductCategorySubCat.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawProductCategorySubCatSink\nRawSalesTerritorySelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimSalesTerritory.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawSalesTerritorySink\nRawResellerSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimReseller.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawResellerSink\nRawGeographySelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimGeography.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawGeographySink\nRawDateSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimDate.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawDateSink\nRawDistinctFactResellerSales sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['FactResellerSales.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawFactResellerSalesSink\nRawFactSalesQuotaSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['FactSalesQuota.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RawFactSalesQuotaSink"
		}
	}
}